def zconf(line):
    return getattr(re.match(r'^\[\[\[(.*)\]\]\]$', line),
              'group', lambda x: None)(1)

# the inventory function
def inventory_zope2_factory(plugin):
    def inventory_zope2(info):
       print "inventory %s" % plugin
       # begin with empty inventory
       inventory = []
       # loop over all output lines of the agent
       conf = None
       for line in info:
          if zconf(line[0]):
              conf = zconf(line[0])
          elif conf:
              if line[1].split('=')[0] == plugin:
                  inventory.append( (conf, "", None) )
       return inventory
    return inventory_zope2

# the check function
def check_zope2_factory(plugin):
    def check_zope2(item, params, info):
        conf = None
        for line in info:
           if zconf(line[0]):
               conf = zconf(line[0])
           elif conf:
               k, values = line[1].split('=')
               results = [row.split(':') for row in values.split(',')]
               # v = int(float(v))
               if conf==item and k == plugin:
                   return (0, "OK - %s" % values, results)
        return (3, "UNKNOWN - %s %s not found in agent output" % (plugin, item))
    return check_zope2

# declare the check to Check_MK
for plugin in [
          'zopecache',
          'zodbactivity',
          'zopethreads',
          'zopememory',]:
    check_info['zope2.%s' % plugin] = \
      (check_zope2_factory(plugin), "zope2_%s %%s" % plugin, 1, inventory_zope2_factory(plugin))

